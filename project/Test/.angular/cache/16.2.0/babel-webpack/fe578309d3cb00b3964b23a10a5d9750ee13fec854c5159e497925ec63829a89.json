{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user.service\";\nconst AUTH_API = 'http://localhost:8080/api/auth/';\nclass AuthService {\n  constructor(http, userService) {\n    this.http = http;\n    this.userService = userService;\n    this.userRoles = [];\n  }\n  register(requestModel) {\n    return this.http.post(AUTH_API + 'signup', requestModel, {\n      observe: 'response'\n    });\n  }\n  registerAgent(requestModel) {\n    return this.http.post(AUTH_API + 'signupAgent', requestModel, {\n      observe: 'response'\n    });\n  }\n  signIn(requestModel) {\n    return this.http.post(AUTH_API + 'signin', requestModel, {\n      observe: 'response'\n    });\n  }\n  setUserRoles(roles) {\n    this.userRoles = roles;\n  }\n  getUserRoles() {\n    return this.userRoles;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AUTH_API","AuthService","constructor","http","userService","userRoles","register","requestModel","post","observe","registerAgent","signIn","setUserRoles","roles","getUserRoles","i0","ɵɵinject","i1","HttpClient","i2","UserService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { UserService } from './user.service';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private userRoles: string[] = [];\r\n\r\n  constructor(private http: HttpClient, private userService: UserService) {}\r\n\r\n  register(requestModel: any): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', requestModel, { observe: 'response' });\r\n  }\r\n  registerAgent(requestModel: any): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signupAgent', requestModel, { observe: 'response' });\r\n  }\r\n  \r\n  \r\n  signIn(requestModel: any): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', requestModel, { observe: 'response' });\r\n  }\r\n\r\n  setUserRoles(roles: string[]): void {\r\n    this.userRoles = roles;\r\n  }\r\n\r\n  getUserRoles(): string[] {\r\n    return this.userRoles;\r\n  }\r\n}\r\n"],"mappings":";;;;AAMA,MAAMA,QAAQ,GAAG,iCAAiC;AAElD,MAGaC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFjD,KAAAC,SAAS,GAAa,EAAE;EAEyC;EAEzEC,QAAQA,CAACC,YAAiB;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACR,QAAQ,GAAG,QAAQ,EAAEO,YAAY,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACnF;EACAC,aAAaA,CAACH,YAAiB;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACR,QAAQ,GAAG,aAAa,EAAEO,YAAY,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACxF;EAGAE,MAAMA,CAACJ,YAAiB;IACtB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAACR,QAAQ,GAAG,QAAQ,EAAEO,YAAY,EAAE;MAAEE,OAAO,EAAE;IAAU,CAAE,CAAC;EACnF;EAEAG,YAAYA,CAACC,KAAe;IAC1B,IAAI,CAACR,SAAS,GAAGQ,KAAK;EACxB;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACT,SAAS;EACvB;;SAvBWJ,WAAW;;mBAAXA,MAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;SAAXnB,MAAW;EAAAoB,OAAA,EAAXpB,MAAW,CAAAqB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}