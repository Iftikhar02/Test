{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AgentRegistrationComponent = class AgentRegistrationComponent {\n  constructor(router, authservice) {\n    this.router = router;\n    this.authservice = authservice;\n  }\n  onSubmit() {\n    const formData = {\n      username: \"hello\",\n      email: document.getElementById(\"email\").value,\n      phoneNumber: document.getElementById(\"phoneNumber\").value,\n      password: document.getElementById(\"password\").value,\n      commision: document.getElementById(\"commission\").value,\n      companyType: document.getElementById(\"companyType\").value,\n      companyName: document.getElementById(\"companyName\").value,\n      status: \"Not Verified\",\n      roles: [\"mod\"]\n    };\n    console.log(\"Form Data\", formData);\n    this.authservice.registerAgent(formData).subscribe(Response => {\n      console.log(Response);\n      if (Response.status == 201 || Response.status == 200) {\n        console.log(Response['body']);\n        this.router.navigateByUrl('/login');\n        if (Response['body'].success) {\n          console.log(\"Data is \", formData);\n        } else {\n          // Handle registration failure\n        }\n      } else {\n        console.log(\"Error: \");\n      }\n    });\n  }\n};\nAgentRegistrationComponent = __decorate([Component({\n  selector: 'app-agent-registration',\n  templateUrl: './agent-registration.component.html',\n  styleUrls: ['./agent-registration.component.scss']\n})], AgentRegistrationComponent);\nexport { AgentRegistrationComponent };","map":{"version":3,"names":["Component","AgentRegistrationComponent","constructor","router","authservice","onSubmit","formData","username","email","document","getElementById","value","phoneNumber","password","commision","companyType","companyName","status","roles","console","log","registerAgent","subscribe","Response","navigateByUrl","success","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\agent-registration\\agent-registration.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AgentregisterationService } from '../services/agentregisteration.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-agent-registration',\r\n  templateUrl: './agent-registration.component.html',\r\n  styleUrls: ['./agent-registration.component.scss']\r\n})\r\nexport class AgentRegistrationComponent {\r\nconstructor(private router: Router,\r\n  private authservice:AuthService){}\r\n\r\n  onSubmit() {\r\n  \r\n    const formData = {\r\n      username:\"hello\",\r\n      email: (<HTMLInputElement>document.getElementById(\"email\")).value,\r\n      phoneNumber: (<HTMLInputElement>document.getElementById(\"phoneNumber\")).value,\r\n      password: (<HTMLInputElement>document.getElementById(\"password\")).value,\r\n      commision: (<HTMLInputElement>document.getElementById(\"commission\")).value,\r\n      companyType: (<HTMLInputElement>document.getElementById(\"companyType\")).value,\r\n      companyName: (<HTMLInputElement>document.getElementById(\"companyName\")).value,\r\n      status:\"Not Verified\",\r\n      roles: [\"mod\"]\r\n\r\n\r\n    };\r\n    console.log(\"Form Data\",formData);\r\n    \r\n     this.authservice.registerAgent(formData).subscribe((Response) => {\r\n       console.log(Response);\r\n       if (Response.status == 201 || Response.status==200) {\r\n         console.log(Response['body']);\r\n         this.router.navigateByUrl('/login');\r\n\r\n         if (Response['body'].success) {\r\n           console.log(\"Data is \", formData);\r\n         } else {\r\n           // Handle registration failure\r\n         }\r\n       } else {\r\n         console.log(\"Error: \");\r\n       }\r\n     });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWzC,IAAaC,0BAA0B,GAAvC,MAAaA,0BAA0B;EACvCC,YAAoBC,MAAc,EACxBC,WAAuB;IADb,KAAAD,MAAM,GAANA,MAAM;IAChB,KAAAC,WAAW,GAAXA,WAAW;EAAc;EAEjCC,QAAQA,CAAA;IAEN,MAAMC,QAAQ,GAAG;MACfC,QAAQ,EAAC,OAAO;MAChBC,KAAK,EAAqBC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAE,CAACC,KAAK;MACjEC,WAAW,EAAqBH,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,KAAK;MAC7EE,QAAQ,EAAqBJ,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAE,CAACC,KAAK;MACvEG,SAAS,EAAqBL,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAE,CAACC,KAAK;MAC1EI,WAAW,EAAqBN,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,KAAK;MAC7EK,WAAW,EAAqBP,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAE,CAACC,KAAK;MAC7EM,MAAM,EAAC,cAAc;MACrBC,KAAK,EAAE,CAAC,KAAK;KAGd;IACDC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACd,QAAQ,CAAC;IAEhC,IAAI,CAACF,WAAW,CAACiB,aAAa,CAACf,QAAQ,CAAC,CAACgB,SAAS,CAAEC,QAAQ,IAAI;MAC9DJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;MACrB,IAAIA,QAAQ,CAACN,MAAM,IAAI,GAAG,IAAIM,QAAQ,CAACN,MAAM,IAAE,GAAG,EAAE;QAClDE,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,CAACpB,MAAM,CAACqB,aAAa,CAAC,QAAQ,CAAC;QAEnC,IAAID,QAAQ,CAAC,MAAM,CAAC,CAACE,OAAO,EAAE;UAC5BN,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEd,QAAQ,CAAC;SAClC,MAAM;UACL;QAAA;OAEH,MAAM;QACLa,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;;IAE1B,CAAC,CAAC;EACL;CAID;AAxCYnB,0BAA0B,GAAAyB,UAAA,EALtC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,C,EACW5B,0BAA0B,CAwCtC;SAxCYA,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}