{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass VotingService {\n  constructor() {\n    this.userId = new Set();\n  }\n  vote(id) {\n    if (this.userId.has(id)) {\n      this.removeVote(id);\n    } else {\n      this.saveVote(id);\n    }\n  }\n  saveVote(id) {\n    this.userId.add(id);\n  }\n  removeVote(id) {\n    this.userId.delete(id);\n  }\n  getVoteCount() {\n    return this.userId.size;\n  }\n}\n_class = VotingService;\n_class.ɵfac = function VotingService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { VotingService };","map":{"version":3,"names":["VotingService","constructor","userId","Set","vote","id","has","removeVote","saveVote","add","delete","getVoteCount","size","factory","ɵfac","providedIn"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\voting.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VotingService {\nprivate userId:Set<string>=new Set<string>();\n\n  constructor() { }\n\n  vote(id:string):void{\n    if(this.userId.has(id)){\n      this.removeVote(id);\n    }\n    else{\n      this.saveVote(id);\n    }\n  }\n  private saveVote(id:string):void{\n    this.userId.add(id);\n  }\n  private removeVote(id:string):void{\n    this.userId.delete(id);\n  }\n  getVoteCount():number{\n    return this.userId.size;\n  }\n}\n"],"mappings":";;AAEA,MAGaA,aAAa;EAGxBC,YAAA;IAFM,KAAAC,MAAM,GAAa,IAAIC,GAAG,EAAU;EAE1B;EAEhBC,IAAIA,CAACC,EAAS;IACZ,IAAG,IAAI,CAACH,MAAM,CAACI,GAAG,CAACD,EAAE,CAAC,EAAC;MACrB,IAAI,CAACE,UAAU,CAACF,EAAE,CAAC;KACpB,MACG;MACF,IAAI,CAACG,QAAQ,CAACH,EAAE,CAAC;;EAErB;EACQG,QAAQA,CAACH,EAAS;IACxB,IAAI,CAACH,MAAM,CAACO,GAAG,CAACJ,EAAE,CAAC;EACrB;EACQE,UAAUA,CAACF,EAAS;IAC1B,IAAI,CAACH,MAAM,CAACQ,MAAM,CAACL,EAAE,CAAC;EACxB;EACAM,YAAYA,CAAA;IACV,OAAO,IAAI,CAACT,MAAM,CAACU,IAAI;EACzB;;SArBWZ,aAAa;;mBAAbA,MAAa;AAAA;;SAAbA,MAAa;EAAAa,OAAA,EAAbb,MAAa,CAAAc,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPf,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}