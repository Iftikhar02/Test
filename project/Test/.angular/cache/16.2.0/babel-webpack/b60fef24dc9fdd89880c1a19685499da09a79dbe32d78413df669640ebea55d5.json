{"ast":null,"code":"var _class;\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass GetqouteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/personal-details/';\n  }\n  getPersonalDetailsByCnic(cnic) {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('cnic', cnic);\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n      // Add any other headers if required\n    });\n\n    return this.http.get(this.apiUrl + 'findbycnic', {\n      observe: 'response',\n      headers,\n      params\n    });\n  }\n  getDriverDetailsByLiecense(license) {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('license', license);\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n      // Add any other headers if required\n    });\n\n    return this.http.get('http://localhost:8080/api/findbylicense', {\n      observe: 'response',\n      headers,\n      params\n    });\n  }\n  getVehicleDetailsByRegistrationNumber(registrationNumber) {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('registrationNumber', registrationNumber);\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n      // Add any other headers if required\n    });\n\n    return this.http.get('http://localhost:8080/api/findByRegistrationNumber', {\n      observe: 'response',\n      headers,\n      params\n    });\n  }\n  addPersonalDetails(requestModel) {\n    return this.http.post(this.apiUrl + 'addPersonalDetails', requestModel, {\n      observe: 'response'\n    });\n  }\n  addDriverDetails(requestModel) {\n    return this.http.post('http://localhost:8080/api/addDriverDetails', requestModel, {\n      observe: 'response'\n    });\n  }\n  addVehicleDetails(requestModel) {\n    return this.http.post('http://localhost:8080/api/addVehicleDetails', requestModel, {\n      observe: 'response'\n    });\n  }\n  choosePackage(requestModel) {\n    return this.http.post('http://localhost:8080/api/choose-package/save', requestModel, {\n      observe: 'response'\n    });\n  }\n  paymentDetails(requestModel) {\n    return this.http.post('http://localhost:8080/api/addPaymentDetails', requestModel, {\n      observe: 'response'\n    });\n  }\n  getAllVehicles() {\n    return this.http.get(`http://localhost:8080/api/getAllVehicles`);\n  }\n  getVehiclesByEmail(email) {\n    const params = {\n      email: email\n    };\n    return this.http.get(`http://localhost:8080/api/getVehiclesByEmail`, {\n      params\n    });\n  }\n  getAllDrivers() {\n    return this.http.get('http://localhost:8080/api/getAllDrivers', {\n      observe: 'response'\n    });\n  }\n  getDriverByEmail(email) {\n    const params = {\n      email: email\n    };\n    return this.http.get(`http://localhost:8080/api/getDriverByEmail`, {\n      params\n    });\n  }\n  getAllPersonalDetails() {\n    return this.http.get('http://localhost:8080/api/personal-details/getAllPersonalDetails', {\n      observe: 'response'\n    });\n  }\n}\n_class = GetqouteService;\n_class.ɵfac = function GetqouteService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { GetqouteService };","map":{"version":3,"names":["HttpHeaders","HttpParams","GetqouteService","constructor","http","apiUrl","getPersonalDetailsByCnic","cnic","params","set","headers","get","observe","getDriverDetailsByLiecense","license","getVehicleDetailsByRegistrationNumber","registrationNumber","addPersonalDetails","requestModel","post","addDriverDetails","addVehicleDetails","choosePackage","paymentDetails","getAllVehicles","getVehiclesByEmail","email","getAllDrivers","getDriverByEmail","getAllPersonalDetails","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\services\\getqoute.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetqouteService {\n  private apiUrl = 'http://localhost:8080/api/personal-details/';\n\n  constructor(private http: HttpClient) { }\n\n  getPersonalDetailsByCnic(cnic: string): Observable<any> {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('cnic', cnic);\n\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      // Add any other headers if required\n    });\n\n    return this.http.get(this.apiUrl+'findbycnic', { observe: 'response' ,headers, params });\n  }\n\n  getDriverDetailsByLiecense(license: string): Observable<any> {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('license', license);\n\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      // Add any other headers if required\n    });\n\n    return this.http.get('http://localhost:8080/api/findbylicense', {  observe: 'response' ,headers, params });\n  }\n\n  getVehicleDetailsByRegistrationNumber(registrationNumber: string): Observable<any> {\n    // Pass parameters in the request URL\n    const params = new HttpParams().set('registrationNumber', registrationNumber);\n\n    // Set headers if needed (adjust Content-Type accordingly)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      // Add any other headers if required\n    });\n\n    return this.http.get('http://localhost:8080/api/findByRegistrationNumber', {  observe: 'response' ,headers, params });\n  }\n\n\n  addPersonalDetails(requestModel: any): Observable<any> {\n    return this.http.post(this.apiUrl + 'addPersonalDetails', requestModel, { observe: 'response' });\n  }\n  addDriverDetails(requestModel: any): Observable<any> {\n    return this.http.post('http://localhost:8080/api/addDriverDetails', requestModel, { observe: 'response' });\n  }\n  addVehicleDetails(requestModel: any): Observable<any> {\n    return this.http.post('http://localhost:8080/api/addVehicleDetails', requestModel, { observe: 'response' });\n  }\n  choosePackage(requestModel: any): Observable<any> {\n    return this.http.post('http://localhost:8080/api/choose-package/save', requestModel, { observe: 'response' });\n  }\n  paymentDetails(requestModel: any): Observable<any> {\n    return this.http.post('http://localhost:8080/api/addPaymentDetails', requestModel, { observe: 'response' });\n  }\n\n  getAllVehicles(): Observable<any[]> {\n    return this.http.get<any[]>(`http://localhost:8080/api/getAllVehicles`);\n  }\n\n  getVehiclesByEmail(email: string): Observable<any[]> {\n    const params = { email: email };\n    return this.http.get<any[]>(`http://localhost:8080/api/getVehiclesByEmail`, { params });\n  }\n\n  \n\n  public getAllDrivers(): Observable<any>{\n    return this.http.get('http://localhost:8080/api/getAllDrivers', { observe: 'response' });\n}\n\n \n  getDriverByEmail(email: string): Observable<any> {\n    const params = { email: email };\n    return this.http.get<any>(`http://localhost:8080/api/getDriverByEmail`, { params });\n  }\n\n\n\n  public getAllPersonalDetails(): Observable<any>{\n    return this.http.get('http://localhost:8080/api/personal-details/getAllPersonalDetails', { observe: 'response' });\n  }\n}\n"],"mappings":";AACA,SAAqBA,WAAW,EAAEC,UAAU,QAAsB,sBAAsB;;;AAGxF,MAGaC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6CAA6C;EAEtB;EAExCC,wBAAwBA,CAACC,IAAY;IACnC;IACA,MAAMC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;IAEjD;IACA,MAAMG,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE;MAChB;KACD,CAAC;;IAEF,OAAO,IAAI,CAACI,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,MAAM,GAAC,YAAY,EAAE;MAAEO,OAAO,EAAE,UAAU;MAAEF,OAAO;MAAEF;IAAM,CAAE,CAAC;EAC1F;EAEAK,0BAA0BA,CAACC,OAAe;IACxC;IACA,MAAMN,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,SAAS,EAAEK,OAAO,CAAC;IAEvD;IACA,MAAMJ,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE;MAChB;KACD,CAAC;;IAEF,OAAO,IAAI,CAACI,IAAI,CAACO,GAAG,CAAC,yCAAyC,EAAE;MAAGC,OAAO,EAAE,UAAU;MAAEF,OAAO;MAAEF;IAAM,CAAE,CAAC;EAC5G;EAEAO,qCAAqCA,CAACC,kBAA0B;IAC9D;IACA,MAAMR,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,oBAAoB,EAAEO,kBAAkB,CAAC;IAE7E;IACA,MAAMN,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE;MAChB;KACD,CAAC;;IAEF,OAAO,IAAI,CAACI,IAAI,CAACO,GAAG,CAAC,oDAAoD,EAAE;MAAGC,OAAO,EAAE,UAAU;MAAEF,OAAO;MAAEF;IAAM,CAAE,CAAC;EACvH;EAGAS,kBAAkBA,CAACC,YAAiB;IAClC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,MAAM,GAAG,oBAAoB,EAAEa,YAAY,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAClG;EACAQ,gBAAgBA,CAACF,YAAiB;IAChC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,4CAA4C,EAAED,YAAY,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC5G;EACAS,iBAAiBA,CAACH,YAAiB;IACjC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,6CAA6C,EAAED,YAAY,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC7G;EACAU,aAAaA,CAACJ,YAAiB;IAC7B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,+CAA+C,EAAED,YAAY,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC/G;EACAW,cAAcA,CAACL,YAAiB;IAC9B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,6CAA6C,EAAED,YAAY,EAAE;MAAEN,OAAO,EAAE;IAAU,CAAE,CAAC;EAC7G;EAEAY,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACpB,IAAI,CAACO,GAAG,CAAQ,0CAA0C,CAAC;EACzE;EAEAc,kBAAkBA,CAACC,KAAa;IAC9B,MAAMlB,MAAM,GAAG;MAAEkB,KAAK,EAAEA;IAAK,CAAE;IAC/B,OAAO,IAAI,CAACtB,IAAI,CAACO,GAAG,CAAQ,8CAA8C,EAAE;MAAEH;IAAM,CAAE,CAAC;EACzF;EAIOmB,aAAaA,CAAA;IAClB,OAAO,IAAI,CAACvB,IAAI,CAACO,GAAG,CAAC,yCAAyC,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAE,CAAC;EAC5F;EAGEgB,gBAAgBA,CAACF,KAAa;IAC5B,MAAMlB,MAAM,GAAG;MAAEkB,KAAK,EAAEA;IAAK,CAAE;IAC/B,OAAO,IAAI,CAACtB,IAAI,CAACO,GAAG,CAAM,4CAA4C,EAAE;MAAEH;IAAM,CAAE,CAAC;EACrF;EAIOqB,qBAAqBA,CAAA;IAC1B,OAAO,IAAI,CAACzB,IAAI,CAACO,GAAG,CAAC,kEAAkE,EAAE;MAAEC,OAAO,EAAE;IAAU,CAAE,CAAC;EACnH;;SAtFWV,eAAe;;mBAAfA,MAAe,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAf/B,MAAe;EAAAgC,OAAA,EAAfhC,MAAe,CAAAiC,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPlC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}