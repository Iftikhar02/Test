{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass GetqouteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/personal-details/'; // Replace with your actual API base URL\n  }\n\n  getPersonalDetailsByCnic(requestModel) {\n    return this.http.get(this.apiUrl + 'findbycnic' + '/' + requestModel, requestModel);\n  }\n}\n_class = GetqouteService;\n_class.ɵfac = function GetqouteService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { GetqouteService };","map":{"version":3,"names":["GetqouteService","constructor","http","apiUrl","getPersonalDetailsByCnic","requestModel","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\services\\getqoute.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetqouteService {\n  private apiUrl = 'http://localhost:8080/api/personal-details/'; // Replace with your actual API base URL\n\n  constructor(private http: HttpClient ) { }\n\n  \n  getPersonalDetailsByCnic(requestModel: any): Observable<any> {\n    return this.http.get(this.apiUrl+'findbycnic'+'/'+requestModel,requestModel);\n  }\n\n}\n"],"mappings":";;;AAIA,MAGaA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6CAA6C,CAAC,CAAC;EAEvB;;EAGzCC,wBAAwBA,CAACC,YAAiB;IACxC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,MAAM,GAAC,YAAY,GAAC,GAAG,GAACE,YAAY,EAACA,YAAY,CAAC;EAC9E;;SARWL,eAAe;;mBAAfA,MAAe,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAfV,MAAe;EAAAW,OAAA,EAAfX,MAAe,CAAAY,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPb,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}