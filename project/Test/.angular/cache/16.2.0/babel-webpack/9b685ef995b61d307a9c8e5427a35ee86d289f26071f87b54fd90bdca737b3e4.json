{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/getqoute.service\";\nclass DriverListComponent {\n  constructor(vehicleService) {\n    this.vehicleService = vehicleService;\n    this.drivers = []; // Replace 'any' with the actual type of your driver objects\n  }\n\n  ngOnInit() {\n    this.fetchAllDrivers();\n  }\n  fetchAllDrivers() {\n    this.vehicleService.getAllDrivers().subscribe(response => {\n      this.drivers = response;\n    }, error => {\n      console.error('Error fetching all drivers:', error);\n    });\n  }\n  fetchDriverByEmail(email) {\n    this.vehicleService.getDriverByEmail(email).subscribe(response => {\n      this.driver = response;\n    }, error => {\n      console.error('Error fetching driver by email:', error);\n    });\n  }\n}\n_class = DriverListComponent;\n_class.ɵfac = function DriverListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.GetqouteService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-driver-list\"]],\n  decls: 2,\n  vars: 0,\n  template: function DriverListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"driver-list works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { DriverListComponent };","map":{"version":3,"names":["DriverListComponent","constructor","vehicleService","drivers","ngOnInit","fetchAllDrivers","getAllDrivers","subscribe","response","error","console","fetchDriverByEmail","email","getDriverByEmail","driver","i0","ɵɵdirectiveInject","i1","GetqouteService","selectors","decls","vars","template","DriverListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\admin\\driver-list\\driver-list.component.ts","C:\\Users\\saeedcomp\\3D Objects\\FYP_Frontend\\VIMS\\src\\app\\admin\\driver-list\\driver-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { GetqouteService } from 'src/app/services/getqoute.service';\n\n@Component({\n  selector: 'app-driver-list',\n  templateUrl: './driver-list.component.html',\n  styleUrls: ['./driver-list.component.scss']\n})\nexport class DriverListComponent {\n  drivers: any[] = []; // Replace 'any' with the actual type of your driver objects\n  driver: any;\n\n  constructor(private vehicleService: GetqouteService) { }\n\n  ngOnInit(): void {\n    this.fetchAllDrivers();\n  }\n\n  fetchAllDrivers(): void {\n    this.vehicleService.getAllDrivers().subscribe(\n      (response: any[]) => {\n        this.drivers = response;\n      },\n      (error: any) => {\n        console.error('Error fetching all drivers:', error);\n      }\n    );\n  }\n\n  fetchDriverByEmail(email: string): void {\n    this.vehicleService.getDriverByEmail(email).subscribe(\n      (response: any) => {\n        this.driver = response;\n      },\n      (error: any) => {\n        console.error('Error fetching driver by email:', error);\n      }\n    );\n  }\n}\n","<p>driver-list works!</p>\n"],"mappings":";;;AAGA,MAKaA,mBAAmB;EAI9BC,YAAoBC,cAA+B;IAA/B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAAC,OAAO,GAAU,EAAE,CAAC,CAAC;EAGkC;;EAEvDC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACH,cAAc,CAACI,aAAa,EAAE,CAACC,SAAS,CAC1CC,QAAe,IAAI;MAClB,IAAI,CAACL,OAAO,GAAGK,QAAQ;IACzB,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;EAEAE,kBAAkBA,CAACC,KAAa;IAC9B,IAAI,CAACV,cAAc,CAACW,gBAAgB,CAACD,KAAK,CAAC,CAACL,SAAS,CAClDC,QAAa,IAAI;MAChB,IAAI,CAACM,MAAM,GAAGN,QAAQ;IACxB,CAAC,EACAC,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CACF;EACH;;SA9BWT,mBAAmB;;mBAAnBA,MAAmB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;;QAAnBlB,MAAmB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhCT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,yBAAkB;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDQZ5B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}